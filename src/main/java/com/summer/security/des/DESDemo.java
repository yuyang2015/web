package com.summer.security.des;import java.security.InvalidKeyException;import java.security.NoSuchAlgorithmException;import java.security.spec.InvalidKeySpecException;import javax.crypto.BadPaddingException;import javax.crypto.Cipher;import javax.crypto.IllegalBlockSizeException;import javax.crypto.KeyGenerator;import javax.crypto.NoSuchPaddingException;import javax.crypto.SecretKey;import javax.crypto.SecretKeyFactory;import javax.crypto.spec.DESKeySpec;import org.apache.commons.codec.binary.Hex;public class DESDemo {	public static final String src = "des test";	public static void main(String[] args) {		jdkDes();	}	public static void jdkDes() {		try {			// 生成key			KeyGenerator keyGenerator = KeyGenerator.getInstance("DES");			keyGenerator.init(56);			SecretKey secretKey = keyGenerator.generateKey();			byte[] bytesKey = secretKey.getEncoded();			// key转换			DESKeySpec desKeySpec = new DESKeySpec(bytesKey);			SecretKeyFactory factory = SecretKeyFactory.getInstance("DES");			SecretKey convertSecretKey = factory.generateSecret(desKeySpec);			// 加密			Cipher cipher = Cipher.getInstance("DES/ECB/PKCS5Padding");			cipher.init(Cipher.ENCRYPT_MODE, convertSecretKey);			byte[] result = cipher.doFinal(src.getBytes());			System.out					.println("jdk des encrypt:" + Hex.encodeHexString(result));			// 解密			cipher.init(Cipher.DECRYPT_MODE, convertSecretKey);			result = cipher.doFinal(result);			System.out.println("jdk des decrypt:" + new String(result));		} catch (NoSuchAlgorithmException | InvalidKeyException e) {			e.printStackTrace();		} catch (InvalidKeySpecException e) {			e.printStackTrace();		} catch (NoSuchPaddingException e) {			e.printStackTrace();		} catch (IllegalBlockSizeException e) {			e.printStackTrace();		} catch (BadPaddingException e) {			e.printStackTrace();		}	}}